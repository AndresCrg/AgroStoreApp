// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id               Int             @id @default(autoincrement())
  name             String          @db.VarChar(30)
  type             TypeProduct
  harvestDate      DateTime        @db.Date
  harvestLocation  String          @db.VarChar(30)
  units            UnitMeasurement
  quantityAvalible Int             @db.Int
  pricePerunit     Int             @db.Int
  image            String          @db.VarChar(255)
  description      String          @db.VarChar(180)
  state            State?          @default(A)
  SalePromise      SalePromise[]
  User             User            @relation(fields: [userId], references: [id])
  userId           Int

  @@map("products")
}

enum UnitMeasurement {
  KG
  LB
  AR

  @@map("unitMeasurement")
}

enum TypeProduct {
  FRUITS
  CEREALS
  LEGOMINOUS
  VEGETABLES
  TUBERS

  @@map("typeProducts")
}

model Credential {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  role     Role?  @default(USER)
  state    State? @default(A)
  user     User?

  @@map("credentials")
}

model User {
  id                Int           @id @default(autoincrement())
  full_name         String        @db.VarChar(70)
  document_type     TypeDoc
  document          String        @unique @db.VarChar(45)
  address           String        @db.VarChar(70)
  city              String        @db.VarChar(70)
  phone_number      String        @db.VarChar(15)
  credential        Credential    @relation(fields: [credentialId], references: [email])
  credentialId      String        @unique
  products          Product[]
  SalePromiseSeller SalePromise[] @relation("seller")
  SalePromiseBuyer  SalePromise[] @relation("buyer")

  @@map("users")
}

enum TypeDoc {
  CC
  CE
  PA

  @@map("typeDoc")
}

enum State {
  A
  B
  D

  @@map("states")
}

enum Role {
  ADMIN
  USER

  @@map("roles")
}

model SalePromise {
  id           Int         @id @default(autoincrement())
  seller       User        @relation("seller", fields: [userSellerId], references: [id])
  userSellerId Int
  buyer        User        @relation("buyer", fields: [userBuyerId], references: [id])
  userBuyerId  Int
  product      Product     @relation(fields: [productId], references: [id])
  productId    Int
  date         DateTime    @db.Date
  statusSale   StatusSale? @default(A)
  saleQuantity Int         @db.Int
  pricePerUnit Int         @db.Int
  total        Int         @db.Int

  @@map("salesPromise")
}

enum StatusSale {
  A
  E
  C
  S

  @@map("statusSale")
}
